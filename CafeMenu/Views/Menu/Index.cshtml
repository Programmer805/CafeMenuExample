@model CafeMenu.Models.MenuViewModel
@{
    ViewBag.Title = "Cafe Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentTenantId = ViewBag.TenantId ?? CafeMenu.Infrastructure.TenantResolver.GetCurrentTenantId();
    
    // Döviz kuru değişkenlerini bir kez tanımla
    var fromCurrency = Request.QueryString["from"] ?? "TRY";
    var toCurrency = Request.QueryString["to"] ?? "USD";
}

<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <h2 class="page-title">
                        <i class="fas fa-utensils me-2 text-primary"></i>
                        @(ViewBag.TenantName ?? "Menümüz")
                    </h2>
                    <div class="page-subtitle text-muted mt-1">
                        Lezzetli seçeneklerimizi keşfedin
                        @if (currentTenantId > 0)
                        {
                            <span class="badge bg-primary ms-2">Tenant: @currentTenantId</span>
                        }
                    </div>
                </div>
                <div class="col-auto ms-auto d-print-none">
                    <div class="btn-list">
                        
                        <div class="input-group">
                            <input type="text" id="searchInput" class="form-control" placeholder="Ürün ara..." value="">
                            <button class="btn btn-outline-secondary" type="button" id="clearSearch" onclick="clearSearch()" style="display: none;">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Page body -->
    <div class="page-body">
        <div class="container-xl">
            <!-- Arama Durum Bilgisi -->
            <div id="searchStatus" class="alert alert-info" style="display: none;">
                <i class="fas fa-search me-2"></i>
                <span id="searchStatusText"></span>
                <button type="button" class="btn-close float-end" onclick="clearSearch()"></button>
            </div>

            @if (Model?.Categories != null && Model.Categories.Any())
            {
                <!-- Kategoriler ve Ürünleri -->
                foreach (var category in Model.Categories.Where(c => c.ParentCategoryID == null))
                {
                    <!-- Kategori Başlığı -->
                    <div class="card mb-4 category-card" data-category-id="@category.ID">
                        <div class="card-header bg-primary text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h3 class="card-title mb-0">
                                    <i class="fas fa-utensils me-2"></i>
                                    @category.CategoryName
                                </h3>
                                <span class="badge bg-white text-primary category-count" data-original-count="@(category.Products?.Count ?? 0)">@(category.Products?.Count ?? 0) ürün</span>
                            </div>
                        </div>
                        
                        <!-- Bu Kategorideki Ürünler -->
                        @if (category.Products != null && category.Products.Any())
                        {
                            <div class="card-body">
                                <div class="row">
                                    @foreach (var product in category.Products)
                                    {
                                        <div class="col-lg-6 col-xl-4 mb-3 product-item" data-product-name="@product.ProductName.ToLower()" data-product-description="@(product.Description?.ToLower() ?? "")" data-category-name="@category.CategoryName.ToLower()">
                                            <div class="card h-100 border-0 shadow-sm product-card">
                                                <div class="row g-0 h-100">
                                                    <div class="col-4">
                                                        @if (!string.IsNullOrEmpty(product.ImagePath))
                                                        {
                                                            <img src="@product.ImagePath" class="img-fluid rounded-start h-100" alt="@product.ProductName" 
                                                                 style="object-fit: cover; min-height: 120px;">
                                                        }
                                                        else
                                                        {
                                                            <div class="d-flex align-items-center justify-content-center bg-light rounded-start h-100" 
                                                                 style="min-height: 120px;">
                                                                <i class="fas fa-image text-muted fa-2x"></i>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="col-8">
                                                        <div class="card-body p-3 d-flex flex-column h-100">
                                                            <h6 class="card-title text-dark mb-1">@product.ProductName</h6>
                                                            
                                                            @if (!string.IsNullOrEmpty(product.Description))
                                                            {
                                                                <p class="card-text text-muted small mb-2 flex-grow-1">
                                                                    @(product.Description.Length > 60 ? product.Description.Substring(0, 60) + "..." : product.Description)
                                                                </p>
                                                            }
                                                            
                                                            <div class="mt-auto">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <div class="price-container">
                                                                        @{
                                                                            var convertedPrice = product.Price * Model.ExchangeRate;
                                                                        }
                                                                        
                                                                        @if (Model.ExchangeRate != 1.0m)
                                                                        {
                                                                            <div class="price-main">
                                                                                <span class="h6 text-primary mb-0">@product.Price.ToString("N2") @fromCurrency</span>
                                                                            </div>
                                                                            <div class="price-secondary">
                                                                                <small class="text-muted">(@convertedPrice.ToString("N2") @toCurrency)</small>
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="price-main">
                                                                                <span class="h6 text-primary mb-0">@product.Price.ToString("N2") @fromCurrency</span>
                                                                            </div>
                                                                            if (!toCurrency.Equals(fromCurrency, StringComparison.OrdinalIgnoreCase))
                                                                            {
                                                                                <div class="price-secondary">
                                                                                    <small class="text-muted">(@toCurrency kuruna eşit)</small>
                                                                                </div>
                                                                            }
                                                                        }
                                                                    </div>
                                                                    <a href="@Url.Action("Product", new { tenantId = currentTenantId, id = product.ID })" 
                                                                       class="btn btn-outline-primary btn-sm">
                                                                        <i class="fas fa-eye"></i>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="card-body text-center py-4">
                                <i class="fas fa-utensils fa-2x text-muted mb-2"></i>
                                <p class="text-muted mb-0">Bu kategoride henüz ürün bulunmuyor.</p>
                            </div>
                        }
                    </div>
                    
                    <!-- Alt Kategoriler -->
                    if (category.SubCategories != null && category.SubCategories.Any())
                    {
                        foreach (var subCategory in category.SubCategories)
                        {
                            <div class="card mb-4 ms-4 category-card" data-category-id="@subCategory.ID">
                                <div class="card-header bg-secondary text-white">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h4 class="card-title mb-0">
                                            <i class="fas fa-angle-right me-2"></i>
                                            @subCategory.CategoryName
                                        </h4>
                                        <span class="badge bg-white text-secondary category-count" data-original-count="@(subCategory.Products?.Count ?? 0)">@(subCategory.Products?.Count ?? 0) ürün</span>
                                    </div>
                                </div>
                                
                                @if (subCategory.Products != null && subCategory.Products.Any())
                                {
                                    <div class="card-body">
                                        <div class="row">
                                            @foreach (var product in subCategory.Products)
                                            {
                                                <div class="col-lg-6 col-xl-4 mb-3 product-item" data-product-name="@product.ProductName.ToLower()" data-product-description="@(product.Description?.ToLower() ?? "")" data-category-name="@subCategory.CategoryName.ToLower()">
                                                    <div class="card h-100 border-0 shadow-sm product-card">
                                                        <div class="row g-0 h-100">
                                                            <div class="col-4">
                                                                @if (!string.IsNullOrEmpty(product.ImagePath))
                                                                {
                                                                    <img src="@product.ImagePath" class="img-fluid rounded-start h-100" alt="@product.ProductName" 
                                                                         style="object-fit: cover; min-height: 120px;">
                                                                }
                                                                else
                                                                {
                                                                    <div class="d-flex align-items-center justify-content-center bg-light rounded-start h-100" 
                                                                         style="min-height: 120px;">
                                                                        <i class="fas fa-image text-muted fa-2x"></i>
                                                                    </div>
                                                                }
                                                            </div>
                                                            <div class="col-8">
                                                                <div class="card-body p-3 d-flex flex-column h-100">
                                                                    <h6 class="card-title text-dark mb-1">@product.ProductName</h6>
                                                                    
                                                                    @if (!string.IsNullOrEmpty(product.Description))
                                                                    {
                                                                        <p class="card-text text-muted small mb-2 flex-grow-1">
                                                                            @(product.Description.Length > 60 ? product.Description.Substring(0, 60) + "..." : product.Description)
                                                                        </p>
                                                                    }
                                                                    
                                                                    <div class="mt-auto">
                                                                        <div class="d-flex justify-content-between align-items-center">
                                                                            <div class="price-container">
                                                                                @{
                                                                                    var convertedPrice = product.Price * Model.ExchangeRate;
                                                                                }
                                                                                
                                                                                @if (Model.ExchangeRate != 1.0m)
                                                                                {
                                                                                    <div class="price-main">
                                                                                        <span class="h6 text-primary mb-0">@product.Price.ToString("N2") @fromCurrency</span>
                                                                                    </div>
                                                                                    <div class="price-secondary">
                                                                                        <small class="text-muted">(@convertedPrice.ToString("N2") @toCurrency)</small>
                                                                                    </div>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <div class="price-main">
                                                                                        <span class="h6 text-primary mb-0">@product.Price.ToString("N2") @fromCurrency</span>
                                                                                    </div>
                                                                                    if (!toCurrency.Equals(fromCurrency, StringComparison.OrdinalIgnoreCase))
                                                                                    {
                                                                                        <div class="price-secondary">
                                                                                            <small class="text-muted">(@toCurrency kuruna eşit)</small>
                                                                                        </div>
                                                                                    }
                                                                                }
                                                                            </div>
                                                                            <a href="@Url.Action("Product", new { tenantId = currentTenantId, id = product.ID })" 
                                                                               class="btn btn-outline-primary btn-sm">
                                                                                <i class="fas fa-eye"></i>
                                                                            </a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="card-body text-center py-4">
                                        <i class="fas fa-utensils fa-2x text-muted mb-2"></i>
                                        <p class="text-muted mb-0">Bu kategoride henüz ürün bulunmuyor.</p>
                                    </div>
                                }
                            </div>
                        }
                    }
                }
            }
            else
            {
                <!-- Kategori Yok Durumu -->
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-utensils fa-4x text-muted mb-3"></i>
                        <h4 class="text-muted">Menü Hazırlanıyor</h4>
                        <p class="text-muted">Henüz kategori ve ürün eklenmemiş.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var searchTimeout;
            
            // Arama inputu değiştiğinde 
            $('#searchInput').on('input', function() {
                clearTimeout(searchTimeout);
                var searchTerm = $(this).val().trim().toLowerCase();
                
                // 300ms gecikme ile arama yap (performans için)
                searchTimeout = setTimeout(function() {
                    filterProducts(searchTerm);
                }, 300);
                
                // Temizleme butonunu göster/gizle
                if (searchTerm.length > 0) {
                    $('#clearSearch').show();
                } else {
                    $('#clearSearch').hide();
                }
            });
            
            // Enter tuşuna basıldığında
            $('#searchInput').on('keypress', function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    var searchTerm = $(this).val().trim().toLowerCase();
                    filterProducts(searchTerm);
                }
            });
        });
        
        function filterProducts(searchTerm) {
            var visibleCount = 0;
            var totalCount = 0;
            
            // Tüm ürünleri say
            $('.product-item').length && (totalCount = $('.product-item').length);
            
            if (searchTerm === '') {
                // Arama boşsa tüm ürünleri göster
                $('.product-item').show();
                $('.category-card').show();
                $('#searchStatus').hide();
                
                // Kategori sayılarını sıfırla
                $('.category-count').each(function() {
                    var originalCount = $(this).data('original-count');
                    $(this).text(originalCount + ' ürün');
                });
                
                return;
            }
            
            // Ürünleri filtrele
            $('.product-item').each(function() {
                var $product = $(this);
                var productName = $product.data('product-name') || '';
                var productDescription = $product.data('product-description') || '';
                var categoryName = $product.data('category-name') || '';
                
                // Ürün adı, açıklamaı veya kategori adında arama terimini ara
                if (productName.includes(searchTerm) || 
                    productDescription.includes(searchTerm) || 
                    categoryName.includes(searchTerm)) {
                    $product.show();
                    visibleCount++;
                } else {
                    $product.hide();
                }
            });
            
            // Kategori sayılarını güncelle ve boş kategorileri gizle
            $('.category-card').each(function() {
                var $category = $(this);
                var visibleProductsInCategory = $category.find('.product-item:visible').length;
                var $countBadge = $category.find('.category-count');
                
                if (visibleProductsInCategory > 0) {
                    $category.show();
                    $countBadge.text(visibleProductsInCategory + ' ürün');
                } else {
                    $category.hide();
                }
            });
            
            // Arama durumu göster
            if (visibleCount === 0) {
                $('#searchStatusText').html('<strong>"' + searchTerm + '"</strong> için hiç sonuç bulunamadı.');
                $('#searchStatus').removeClass('alert-info alert-success').addClass('alert-warning').show();
            } else {
                $('#searchStatusText').html('<strong>"' + searchTerm + '"</strong> için <strong>' + visibleCount + '</strong> sonuç bulundu.');
                $('#searchStatus').removeClass('alert-warning alert-info').addClass('alert-success').show();
            }
        }
        
        function clearSearch() {
            $('#searchInput').val('');
            $('#clearSearch').hide();
            filterProducts('');
        }

        // Card hover efekti
        $(document).ready(function() {
            $('.product-card').hover(
                function() {
                    $(this).addClass('shadow-lg').css('transform', 'translateY(-5px)');
                },
                function() {
                    $(this).removeClass('shadow-lg').css('transform', 'translateY(0)');
                }
            );
        });
    </script>
    
    <style>
        .product-card {
            transition: all 0.3s ease;
            border-radius: 10px;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1) !important;
        }
        
        .card-header {
            border-radius: 10px 10px 0 0;
        }
        
        .card {
            border-radius: 10px;
            border: none;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .category-title {
            font-weight: 600;
            letter-spacing: 0.5px;
        }
        
        .price-container {
            text-align: left;
        }
        
        .price-main {
            font-weight: bold;
            margin-bottom: 2px;
        }
        
        .price-secondary {
            font-size: 0.85em;
            opacity: 0.8;
        }
        
        .price-container .h6 {
            margin-bottom: 0;
            font-size: 1.1em;
        }
    </style>
}
